<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.wangpai.demo.purejavafx</groupId>
    <artifactId>withoutfxml</artifactId>
    <version>0.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <mainclass.custom>org.wangpai.demo.purejavafx.Entrance</mainclass.custom>
        <javafxmainclass.custom>org.wangpai.demo.purejavafx.App</javafxmainclass.custom>

        <javafx.version.custom>17.0.1</javafx.version.custom>
        <gluonfx.maven.plugin.version.custom>1.0.10</gluonfx.maven.plugin.version.custom>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version.custom}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version.custom}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.6</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>${main.class}</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 此插件必须放在父 POM 中  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!--
                            设置将依赖整合到一个自定义名称的 JAR 包。
                            如果不设置此项，依赖将整合到 Maven 无插件时的默认 JAR 包，并生成一个前缀为 original- 的无依赖 JAR 包
                             -->
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <!-- 设置生成的 JAR 包后缀名 -->
                            <shadedClassifierName>shaded-with-dependencies</shadedClassifierName>
                            <!-- 设置程序运行入口 -->
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${mainclass.custom}</mainClass>
                                </transformer>
                            </transformers>
                            <!-- 设置 JAR 包输出目录 -->
                            <outputDirectory>${project.build.directory}/#maven-shade-plugin</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.gluonhq</groupId>
                <artifactId>gluonfx-maven-plugin</artifactId>
                <version>${gluonfx.maven.plugin.version.custom}</version>
                <configuration>
                    <target>host</target>
                    <mainClass>${javafxmainclass.custom}</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>